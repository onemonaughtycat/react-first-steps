{"version":3,"sources":["Menu.js","pages/Hello.js","pages/Fox.js","pages/Minesweeper/Difficulty.js","pages/Minesweeper/Options.js","pages/Minesweeper/Status.js","pages/Minesweeper/Bar.js","pages/Minesweeper/Icons.js","pages/Minesweeper/Click.js","pages/Minesweeper/Square.js","pages/Minesweeper/Board.js","pages/Minesweeper/Logic.js","pages/Minesweeper/Game.js","pages/index.js","pages/Minesweeper/index.js","Page.js","App.js","index.js"],"names":["Menu","props","state","selected","handleClick","bind","e","i","target","parentNode","children","length","this","setState","onItemClick","outerText","ids","map","id","className","onClick","React","Component","Hello","Fox","Difficulty","name","options","width","height","bombsCount","Options","handleSelectChange","filtered","filter","value","handleInputChange","key","onApplyClick","onChange","it","type","Status","prepared","running","lose","win","Bar","expanded","handleRestartClick","onRestartClick","handleOptionsClick","handleApplyClick","message","expandable","status","Icons","bomb","mark","helper","exploded","Click","openSquare","setMark","openNearSquares","Square","handleContextMenu","preventDefault","handleMouseDown","buttons","handleMouseUp","onSquareClick","handleTouchStart","_timeStamp","timeStamp","handleTouchEnd","diff","isOpened","push","withBomb","nearBombsCount","isMarked","join","onContextMenu","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","Board","handleSquareClick","click","square","data","row","y","x","Logic","Array","fill","_","board","sqr","cx","cy","Math","floor","random","canAdd","r","count","doWithNearSquares","openSquareRec","forEach","closedCount","isBombsNear","isWin","console","log","String","callback","dy","dx","Game","restart","isGameOver","generateBombs","getStatus","initBoard","pages","Object","keys","Page","SomePage","App","handleMenuItemClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e738c10.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Menu.css';\r\n\r\nexport default class Menu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { selected: -1 };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    for (let i = 0; i < e.target.parentNode.children.length; i++)\r\n      if (e.target === e.target.parentNode.children[i])\r\n        this.setState({ selected: i });\r\n\r\n    this.props.onItemClick(e.target.outerText);\r\n  }\r\n\r\n  render() {\r\n    const ids = this.props.ids.map((id, i) => {\r\n      let className = 'system-menu-item';\r\n\r\n      if (i === this.state.selected)\r\n        className += ' selected';\r\n\r\n      return <li key={i} className={className} onClick={this.handleClick}>{id}</li>\r\n    });\r\n\r\n    return (\r\n      <div className=\"system-menu-wrapper\">\r\n        <ul className=\"system-menu-container\">{ids}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Hello extends React.Component {\r\n  render() {\r\n    return <h1>Hello, world!</h1>;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Fox extends React.Component {\r\n  render() {\r\n    return <blockquote>The quick brown fox jump over a lazy dog.</blockquote>;\r\n  }\r\n}\r\n","const Difficulty = [{\r\n  id: 1,\r\n  name: 'Легкий',\r\n  options: {\r\n    width: '9',\r\n    height: '9',\r\n    bombsCount: '10',\r\n  },\r\n},{\r\n  id: 2,\r\n  name: 'Средний',\r\n  options: {\r\n    width: '16',\r\n    height: '16',\r\n    bombsCount: '40',\r\n  },\r\n},{\r\n  id: 3,\r\n  name: 'Сложный',\r\n  options: {\r\n    width: '30',\r\n    height: '16',\r\n    bombsCount: '99',\r\n  },\r\n}];\r\n\r\nexport default Difficulty;\r\n","import React from 'react'\r\nimport Difficulty from './Difficulty'\r\n\r\nimport './Options.css'\r\n\r\nexport default class Options extends React.Component {\r\n  state = {\r\n    options: { ...this.props.options }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"options\">\r\n        <label>Пресет</label>\r\n        <select onChange={this.handleSelectChange}>\r\n        {Difficulty.map(it => (\r\n          <option key={it.id} value={it.id}>{it.name}</option>\r\n        ))}\r\n        </select>\r\n        <br/>\r\n        <label>Ширина поля</label>\r\n        <input type=\"text\" name=\"width\" value={this.state.options.width} onChange={this.handleInputChange}/>\r\n        <br/>\r\n        <label>Высота поля</label>\r\n        <input type=\"text\" name=\"height\" value={this.state.options.height} onChange={this.handleInputChange}/>\r\n        <br/>\r\n        <label>Количество бомб</label>\r\n        <input type=\"text\" name=\"bombsCount\" value={this.state.options.bombsCount} onChange={this.handleInputChange}/>\r\n        <br/>\r\n        <button onClick={this.handleClick}>Принять</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleSelectChange = ({ target }) => {\r\n    const filtered = Difficulty\r\n      .filter(({ id }) => +id === +target.value)\r\n\r\n    if (!filtered.length)\r\n      return\r\n\r\n    const options = { ...filtered[0].options }\r\n\r\n    this.setState({ options });\r\n  }\r\n\r\n  handleInputChange = ({ target }) => {\r\n    const options = {\r\n      ...this.state.options,\r\n      [target.name]: target.value\r\n    }\r\n\r\n    this.setState({ options });\r\n  }\r\n\r\n  handleClick = () => {\r\n    for (const key in this.state.options)\r\n      if (!this.state.options[key])\r\n        return;\r\n\r\n    this.props.onApplyClick(this.state.options);\r\n  }\r\n}","/**\r\n * Статус игры\r\n * @readonly\r\n * @enum {number}\r\n */\r\nconst Status = {\r\n  prepared: 1,\r\n  running: 2,\r\n  lose: 3,\r\n  win: 4\r\n}\r\n\r\nexport default Status","import React from 'react'\r\nimport Options from './Options'\r\nimport Status from './Status'\r\n\r\nimport './Bar.css'\r\n\r\nexport default class Bar extends React.Component {\r\n  state = {\r\n    expanded: false\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bar\">\r\n        <div className=\"main\">\r\n          <div className=\"main-item button\" onClick={this.handleRestartClick}>↻</div>\r\n          <div className=\"main-item message\">{this.message}</div>\r\n          <div className=\"main-item button expander\" onClick={this.handleOptionsClick}>⚙</div>\r\n        </div>\r\n        <div className={this.expandable}>\r\n          <Options options={this.props.options} onApplyClick={this.handleApplyClick}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleRestartClick = () => {\r\n    this.props.onRestartClick();\r\n  }\r\n\r\n  handleOptionsClick = () => {\r\n    this.setState({ expanded: !this.state.expanded });\r\n  }\r\n\r\n  handleApplyClick = options => {\r\n    this.props.onRestartClick(options);\r\n  }\r\n\r\n  get message() {\r\n    switch (this.props.status) {\r\n      case Status.win:\r\n        return 'Победа!'\r\n      case Status.lose:\r\n        return 'Игра окончена'\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n\r\n  get expandable() {\r\n    return 'expandable' + (this.state.expanded ? ' open' : '')\r\n  }\r\n}","const Icons = {\r\n  bomb: '💣',\r\n  mark: '❕',\r\n  helper: '❔',\r\n  exploded: '💥',\r\n}\r\n\r\nexport default Icons;","/**\r\n * Тип клика по ячейке\r\n * @readonly\r\n * @enum {number}\r\n */\r\nconst Click = {\r\n  openSquare: 1,\r\n  setMark: 2,\r\n  openNearSquares: 3,\r\n}\r\n\r\nexport default Click;\r\n","import React from 'react';\r\nimport Icons from './Icons';\r\nimport Click from './Click';\r\n\r\nimport './Square.css';\r\n\r\nexport default class Square extends React.Component {\r\n  handleContextMenu = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  /* Нажатие ЛКМ и ПКМ одновременно используется для безопасного открытия ячеек.\r\n   * Разделение на onMouseDown и onMouseUp сделано для следующего:\r\n   * если была нажата одна из кнопок (1 - ЛКМ, 2 - ПКМ), то будет вызвано событие одной из этих кнопок,\r\n   * иначе будет считаться нажатие двух кнопок (3).\r\n   * Грубо говоря, игрок не проиграет, если даже случайно нажмет обе кнопки на клетку, где есть бомба. */\r\n\r\n  handleMouseDown = e => {\r\n    this.buttons = e.buttons;\r\n  }\r\n\r\n  handleMouseUp = e => {\r\n    if (!this.buttons) return;\r\n\r\n    switch (this.buttons) {\r\n      case 1:\r\n        this.props.onSquareClick(Click.openSquare, this.props);\r\n        break;\r\n      case 2:\r\n        this.props.onSquareClick(Click.setMark, this.props);\r\n        break;\r\n      case 3:\r\n        this.props.onSquareClick(Click.openNearSquares, this.props);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.buttons = null;\r\n  }\r\n\r\n  handleTouchStart = e => {\r\n    this._timeStamp = e.timeStamp;\r\n  }\r\n\r\n  handleTouchEnd = e => {\r\n    e.preventDefault();\r\n\r\n    const diff = e.timeStamp - this._timeStamp;\r\n\r\n    if (!this.props.isOpened && diff < 500)\r\n      this.props.onSquareClick(Click.openSquare, this.props);\r\n\r\n    if (!this.props.isOpened && diff >= 500)\r\n      this.props.onSquareClick(Click.setMark, this.props);\r\n\r\n    if (this.props.isOpened)\r\n      this.props.onSquareClick(Click.openNearSquares, this.props);\r\n  }\r\n\r\n  render() {\r\n    const className = ['square'];\r\n    let value = '';\r\n\r\n    if (this.props.isOpened) {\r\n      className.push('opened');\r\n\r\n      if (this.props.withBomb)\r\n        value = Icons.bomb;\r\n\r\n      if (this.props.nearBombsCount)\r\n        value = this.props.nearBombsCount;\r\n    } else {\r\n      if (this.props.isMarked)\r\n        value = Icons.mark;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={className.join(' ')}\r\n        onContextMenu={this.handleContextMenu}\r\n        onMouseDown={this.handleMouseDown}\r\n        onMouseUp={this.handleMouseUp}\r\n        onTouchStart={this.handleTouchStart}\r\n        onTouchEnd={this.handleTouchEnd}\r\n      >\r\n        <div className=\"dummy\"></div>\r\n        <div className=\"value\">\r\n          {value}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Square from './Square';\r\n\r\nimport './Board.css';\r\n\r\nexport default class Board extends React.Component {\r\n  handleSquareClick = (click, square) => {\r\n    this.props.onSquareClick(click, square);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board\">\r\n        {this.props.data.map((row, y) => (\r\n          <div key={y} className=\"row\">\r\n            {row.map((square, x) => (\r\n              <Square\r\n                key={x}\r\n                x={square.x}\r\n                y={square.y}\r\n                withBomb={square.withBomb}\r\n                nearBombsCount={square.nearBombsCount}\r\n                isOpened={square.isOpened}\r\n                isMarked={square.isMarked}\r\n                onSquareClick={this.handleSquareClick}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Status from \"./Status\";\r\n\r\n/**\r\n * @typedef Square Ячейка\r\n * @property {number} x Координата X\r\n * @property {number} y Координата Y\r\n * @property {boolean} withBomb Есть бомба\r\n * @property {number} nearBombsCount Сколько рядом бомб\r\n * @property {boolean} isOpened Открыта ли\r\n * @property {boolean} isMarked Помечена ли\r\n */\r\n\r\n/**\r\n * Логика игры \"Сапер\"\r\n */\r\nexport default class Logic {\r\n  /**\r\n   * Создать новое поле.\r\n   * @param {number} width Ширина\r\n   * @param {number} height Высота\r\n   * @returns {Square[][]} Поле\r\n   */\r\n  static initBoard(width, height) {\r\n    return Array(+height).fill().map((_, y) =>\r\n      Array(+width).fill().map((_, x) => ({\r\n        x, y,\r\n        withBomb: false,\r\n        nearBombsCount: 0,\r\n        isOpened: false,\r\n        isMarked: false,\r\n        })\r\n      )\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Cгенерировать бомбы на поле.\r\n   * @param {Square[][]} board Поле\r\n   * @param {Square} square Выбранная ячейка\r\n   * @param {number} bombsCount Количество бомб\r\n   * @returns {Square[][] | null} Новое поле\r\n   */\r\n  static generateBombs(board, square, bombsCount) {\r\n    board = board.map(row => row.map(sqr => sqr));\r\n\r\n    const cx = square.x\r\n    const cy = square.y\r\n\r\n    const width = board[0].length;\r\n    const height = board.length;\r\n\r\n    for (let i = 0; i < +bombsCount; i++) {\r\n      const x = Math.floor(Math.random() * width);\r\n      const y = Math.floor(Math.random() * height);\r\n\r\n      let canAdd = true;\r\n\r\n      if (board[y][x].withBomb)\r\n        canAdd = false;\r\n\r\n      const r = Math.random() >= 0.75 ? 1 : 0\r\n\r\n      if (cx - r <= x && x <= cx + r && cy - r <= y && y <= cy + r)\r\n        canAdd = false;\r\n\r\n      if (canAdd)\r\n        board[y][x].withBomb = true;\r\n      else\r\n        i--;\r\n    }\r\n\r\n    for (const row of board) {\r\n      for (const square of row) {\r\n        if (square.withBomb)\r\n          continue;\r\n\r\n        let count = 0;\r\n\r\n        doWithNearSquares(board, square, sqr => {\r\n          if (sqr.withBomb)\r\n            count++;\r\n        })\r\n\r\n        if (count)\r\n          square.nearBombsCount = count;\r\n      }\r\n    }\r\n\r\n    return board\r\n  }\r\n\r\n  /**\r\n   * Открыть ячейку и, по возможности,\r\n   * все остальные рядом с ней, если они пустые.\r\n   * @param {Square[][]} board Поле\r\n   * @param {Square} square Выбранная ячейка\r\n   * @returns {Square[][] | null} Новое поле\r\n   */\r\n  static openSquare(board, square) {\r\n    if (square.isOpened)\r\n      return null;\r\n\r\n    board = board.map(row => row.map(sqr => sqr));\r\n    square = board[square.y][square.x];\r\n\r\n    openSquareRec(board, square);\r\n\r\n    if (square.isOpened && square.withBomb)\r\n      board.forEach(row => row.forEach(sqr => sqr.isOpened = true));\r\n\r\n    return board;\r\n  }\r\n\r\n  /**\r\n   * Поставить или снять метку на закрытую ячейку.\r\n   * @param {Square[][]} board Поле\r\n   * @param {Square} square Выбранная ячейка\r\n   * @returns {Square[][] | null} Новое поле\r\n   */\r\n  static setMark(board, square) {\r\n    if (square.isOpened)\r\n      return null;\r\n\r\n    board = board.map(row => row.map(sqr => sqr));\r\n    square = board[square.y][square.x];\r\n\r\n    square.isMarked = !square.isMarked;\r\n\r\n    return board;\r\n  }\r\n\r\n  /**\r\n   * Открыть соседние ячейки, если среди них нет бомб.\r\n   * @param {Square[][]} board Поле\r\n   * @param {Square} square Выбранная ячейка\r\n   * @returns {Square[][] | null} Новое поле\r\n   */\r\n  static openNearSquares(board, square) {\r\n    let closedCount = 0;\r\n    let isBombsNear = false; \r\n\r\n    doWithNearSquares(board, square, sqr => {\r\n      if (!sqr.isOpened && !sqr.isMarked)\r\n        closedCount++;\r\n      else\r\n        return;\r\n\r\n      if (sqr.withBomb)\r\n        isBombsNear = true;\r\n    });\r\n\r\n    if (!closedCount || isBombsNear)\r\n      return null;\r\n\r\n    board = board.map(row => row.map(sqr => sqr));\r\n\r\n    doWithNearSquares(board, square, sqr => {\r\n      if (!sqr.isOpened && !sqr.isMarked)\r\n        openSquareRec(board, sqr);\r\n    });\r\n\r\n    return board;\r\n  }\r\n\r\n  /**\r\n   * Получить статус игры\r\n   * @param {Square[][]} board Поле\r\n   * @param {Square} square Выбранная ячейка\r\n   * @returns {Status} Статус игры\r\n   */\r\n  static getStatus(board, square) {\r\n    let isWin = true;\r\n\r\n    for (const row of board) {\r\n      for (const square of row) {\r\n        if (!square.isOpened && !square.withBomb)\r\n          isWin = false;\r\n      }\r\n\r\n      if (!isWin)\r\n        break;\r\n    }\r\n\r\n    const isLose = square.isOpened && square.withBomb;\r\n\r\n    return (\r\n      isLose ? Status.lose :\r\n      isWin  ? Status.win  :\r\n      Status.running\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Показать в консоли расположение бомб на поле.\r\n   * @param {Square[][]} board Поле\r\n   */\r\n  static logBoard(board) {\r\n    console.log(\r\n      board.map(row => (\r\n        row.map(square => {\r\n          if (square.withBomb)\r\n            return 'Q';\r\n\r\n          if (square.nearBombsCount)\r\n            return String(square.nearBombsCount);\r\n\r\n          return ' ';\r\n        })\r\n      ))\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * С помощью рекурсии открыть все пустые ячейки\r\n * от выбранной до ячеек с количеством рядом находящихся бомб.\r\n * @param {Square[][]} board Поле\r\n * @param {Square} square Выбранная ячейка\r\n */\r\nfunction openSquareRec(board, square) {\r\n  if (square.isOpened || square.isMarked)\r\n    return;\r\n\r\n  square.isOpened = true;\r\n\r\n  if (square.withBomb || square.nearBombsCount)\r\n    return;\r\n\r\n  doWithNearSquares(board, square, sqr => (\r\n    openSquareRec(board, sqr)\r\n  ));\r\n};\r\n\r\n/**\r\n * @callback NearSquareCallback\r\n * @param {Square} square Выбранная ячейка\r\n */\r\n\r\n/**\r\n * Сделать что-то с ближайшими от выбранной ячейками \r\n * @param {Square[][]} board Поле\r\n * @param {Square} square Выбранная ячейка\r\n * @param {NearSquareCallback} callback Колбэк\r\n */\r\nfunction doWithNearSquares(board, square, callback) {\r\n  const { x, y } = square;\r\n\r\n  for (let dy = -1; dy <= 1; dy++) {\r\n    for (let dx = -1; dx <= 1; dx++) {\r\n      if (!(board[y + dy] && board[y + dy][x + dx]))\r\n        continue;\r\n\r\n      const sqr = board[y + dy][x + dx];\r\n\r\n      if (sqr.x === x && sqr.y === y)\r\n        continue;\r\n\r\n      callback(sqr);\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Bar from './Bar'\r\nimport Board from './Board'\r\n\r\nimport Logic from './Logic'\r\nimport Click from './Click'\r\nimport Status from './Status'\r\n\r\nimport './Game.css'\r\n\r\nexport default class Game extends React.Component {\r\n  state = this.restart()\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Bar \r\n          options={this.state.options}\r\n          status={this.state.status}\r\n          onRestartClick={this.handleRestartClick}\r\n        />\r\n        <Board\r\n          data={this.state.board}\r\n          onSquareClick={this.handleSquareClick}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleRestartClick = options => {\r\n    this.setState(this.restart(options))\r\n  }\r\n\r\n  handleSquareClick = (click, square) => {\r\n    if (this.isGameOver) return\r\n\r\n    let board\r\n\r\n    switch (click) {\r\n      case Click.openSquare:\r\n        if (this.state.status === Status.prepared)\r\n          board = Logic.generateBombs(this.state.board, square, this.state.options.bombsCount)\r\n        board = Logic.openSquare(board || this.state.board, square)\r\n        break\r\n      case Click.setMark:\r\n        board = Logic.setMark(this.state.board, square)\r\n        break\r\n      case Click.openNearSquares:\r\n        board = Logic.openNearSquares(this.state.board, square)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    if (!board) return\r\n\r\n    const status = Logic.getStatus(board, board[square.y][square.x])\r\n\r\n    this.setState({ board, status })\r\n  }\r\n\r\n  restart(options) {\r\n    const { width = 9, height = 9, bombsCount = 10 } = options || (this.state && this.state.options) || {}\r\n\r\n    return {\r\n      options: { width, height, bombsCount },\r\n      board: Logic.initBoard(width, height, bombsCount),\r\n      status: Status.prepared\r\n    }\r\n  }\r\n\r\n  get isGameOver() {\r\n    const { status } = this.state\r\n\r\n    return status === Status.win || status === Status.lose\r\n  }\r\n}","import Hello from './Hello';\r\nimport Fox from './Fox';\r\nimport Minesweeper from './Minesweeper';\r\n\r\nconst pages = {\r\n  'Hello': Hello,\r\n  'Fox': Fox,\r\n  'Minesweeper': Minesweeper,\r\n};\r\n\r\nconst ids = Object.keys(pages);\r\n\r\nexport { pages, ids };\r\n","import React from 'react'\r\nimport Game from './Game'\r\n\r\nexport default class Minesweeper extends React.Component {\r\n  render() {\r\n    return <Game/>\r\n  }\r\n}","import React from 'react';\r\nimport { pages } from \"./pages\";\r\n\r\nexport default class Page extends React.Component {\r\n  render() {\r\n    const SomePage = pages[this.props.id];\r\n\r\n    if (!SomePage)\r\n      return null;\r\n\r\n    return <SomePage/>;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Menu from './Menu';\r\nimport Page from './Page';\r\nimport { ids } from \"./pages\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { id: '' };\r\n\r\n    this.handleMenuItemClick = this.handleMenuItemClick.bind(this);\r\n  }\r\n\r\n  handleMenuItemClick(id) {\r\n    if (this.state.id !== id)\r\n      this.setState({ id });\r\n  }\r\n\r\n  render() {\r\n    const id = this.state.id;\r\n\r\n    return (\r\n      <div>\r\n        <Menu ids={ids} onItemClick={this.handleMenuItemClick}/>\r\n        <Page id={id}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}